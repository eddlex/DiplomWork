@page "/Users"
@using System.Collections.Generic;
@using System.Net.Http.Json
@using FrontEnd.Model
@inject HttpClient httpClient

<style>
    body {
        background-color: black;
        opacity: 0.8;
    }

    .custom-elevation {
        box-shadow: 0px 0px 10px 0px rgba(255, 0, 0, 0.75);
    }

    .custom-paper {
        background-color: #651FFF;
        color: white;
        box-shadow: 0 0 10px rgba(255, 255, 255, 0.3); /* Add 3D box-shadow effect */
    }

    .custom-subheader {
        color: white; /* Set your desired text color */
        font-size: 20px;
    }
</style>

<MudThemeProvider />

<div class="body">
    <MudLayout style="background-color: #212121; color: white;" Elevation="5">
        <Drawer></Drawer>
        <MudMainContent style="background-color: black; color: white;" Elevation="5">
            <div style="height: 10px;"></div>
            <div style="height: 88vh; width: 83vw; margin: 0 auto;">
                <MudDataGrid T="User" Items="@GridUsers" SortMode="SortMode.Multiple" Filterable="true" QuickFilter="@_quickFilter"
                             RowClick="@RowClicked" RowContextMenuClick="RowRightClicked" Selectable="false" MultiSelection="false"
                             ReadOnly="false" FixedHeader="true" EditMode="DataGridEditMode.Form" RowsPerPage="10"
                             StartedEditingItem="@StartedEditingItem" CanceledEditingItem="@CanceledEditingItem" CommittedItemChanges="@CommittedItemChanges"
                             Bordered="true" Dense="true" EditTrigger="@(_editTriggerRowClick ? DataGridEditTrigger.OnRowClick : DataGridEditTrigger.Manual)"
                             ColumnResizeMode="ResizeMode.Container" Style="height:100%" autoPageSize="true">
                <ToolBarContent>
                    <MudText Typo="Typo.h4">Users</MudText>
                    <MudSpacer />
                    @* <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true" *@
                    @*               AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField> *@
                </ToolBarContent>

                <Columns>
                    <PropertyColumn Property="x => x.Id" Title="User Id" Sortable="false" Filterable="false" IsEditable="false" />
                    <PropertyColumn Property="x => x.UserName" Title="User name" />
                    <PropertyColumn Property="x => x.Email" />
                    <PropertyColumn Property="x => x.DepartmentId" Title="Department" />
                    <PropertyColumn Property="x => x.RoleId" />
                    <PropertyColumn Property="x => x.CreationDate" Title="Creation date" />
                    <PropertyColumn Property="x => x.UpdateDate" Title="Update date" />

                    <TemplateColumn Hidden="@(_isCellEditMode || _editTriggerRowClick)" CellClass="d-flex justify-end"
                                        Sortable="false" Filterable="false" StickyRight="true">
                        <CellTemplate>
                            <MudIconButton Icon="@Icons.Material.Outlined.Edit" Size="@Size.Small" OnClick="@context.Actions.StartEditingItemAsync"> </MudIconButton>
                            <MudSpacer />
                            <MudIconButton Icon="@Icons.Material.Filled.Pin" Size="Size.Small" Color="Color.Primary" OnClick="@(() => ChangePass(context.Item))"> </MudIconButton>
                            <MudSpacer />
                            <MudIconButton Icon="@Icons.Material.Outlined.Delete" Size="Size.Small" Color="Color.Error" OnClick="@(() => DeleteUser(context.Item))"> </MudIconButton>
                        </CellTemplate>
                    </TemplateColumn>
                </Columns>

@*                 <PagerContent>
                    <div class="right-corner" > 
                        <MudDataGridPager T="User" />
                    </div> 
                </PagerContent> *@
            </MudDataGrid>
            </div>
        </MudMainContent>
    </MudLayout>
</div>

@code {
    private bool _isCellEditMode;
    private bool _editTriggerRowClick;
    public string _searchString;
    private bool _sortNameByLength;
    private List<string> _events = new();

    private void ChangePass(User item)
    {

    }

    private void DeleteUser(User item)
    {
        
    }
    
    
    // quick filter - filter globally across multiple columns with the same input
    private Func<User, bool> _quickFilter => x =>
    {
        if (string.IsNullOrWhiteSpace(_searchString))
            return true;

        if (x.Email.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        
        if (x.UserName.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        // if ($"{x.Phone} {x.Email} {x.Name}".Contains(_searchString))
        //     return true;

        return false;
    };


    // events
    void RowClicked(DataGridRowClickEventArgs<User> args)
    {
        System.Text.Json.JsonSerializer.Serialize(args.Item);
    }

    void RowRightClicked(DataGridRowClickEventArgs<User> args)
    {
        //args.RowIndex
        System.Text.Json.JsonSerializer.Serialize(args.Item);
    }

    void SelectedItemsChanged(HashSet<User> items)
    {
        System.Text.Json.JsonSerializer.Serialize(items);
    }

    void StartedEditingItem(User item)
    {
        System.Text.Json.JsonSerializer.Serialize(item);
    }

    void CanceledEditingItem(User item)
    {
        System.Text.Json.JsonSerializer.Serialize(item);
    }

    void CommittedItemChanges(User item)
    {
        System.Text.Json.JsonSerializer.Serialize(item);
    }
}