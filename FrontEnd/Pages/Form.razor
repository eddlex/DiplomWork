@page "/Forms"
@using FrontEnd.Model.DTO
@using FrontEnd.Model.BL
@using FrontEnd.Model
@inject IDialogService DialogService

@using System.Net.Http.Json
@using MudBlazor
@inject HttpClient httpClient
@inject ISnackbar Snackbar

<style>
    body {
        background-color: black;
        opacity: 0.8;
    }

    .custom-elevation {
        box-shadow: 0px 0px 10px 0px rgba(255, 0, 0, 0.75);
    }

    .custom-paper {
        background-color: #651FFF;
        color: white;
        box-shadow: 0 0 10px rgba(255, 255, 255, 0.3);
    }

    .custom-subheader {
        color: white; 
        font-size: 20px;
    }
    .div-left{
        width: 66.5%;
        float:left;
        margin: 1% 0 1% 1%;
        height:88vh
    }
    .div-right{
        width: 30.5%;
        float:right;
        margin: 1% 1% 1% 0;
        height:88vh
    }
</style>

<MudThemeProvider />

@* <div class="body"> *@
    <MudLayout style="background-color: #212121; color: white;" Elevation="5">
        <Drawer></Drawer>
        <MudMainContent style="background-color: black; color: white;" Elevation="5">
            <div class = "div-left">
                <MudDataGrid id="left"
                             T="FormDto"
                             Items="@FormDto"
                             SortMode="SortMode.Multiple" 
                             Filterable="true"
                             RowClick="@RowClicked"
                             MultiSelection="false"
                             ReadOnly="false"
                             FixedHeader="true"
                             EditMode="DataGridEditMode.Form"
                             RowsPerPage="10"
                             StartedEditingItem="@StartedEditingItem" 
                             CanceledEditingItem="@CanceledEditingItem"
                             CommittedItemChanges="@CommittedItemChanges"
                             Bordered="true" 
                             Dense="true"
                             EditTrigger="@(_editTriggerRowClick ? DataGridEditTrigger.OnRowClick : DataGridEditTrigger.Manual)"
                             ColumnResizeMode="ResizeMode.Column"
                             Style="height:100%" >
                    <ToolBarContent>
                        <MudText Typo="Typo.h4" class="mr-2">Forms</MudText>
                        <MudIconButton @onclick="AddRow" Icon="@Icons.Material.Filled.Add" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" />
                        <MudSpacer />
                    </ToolBarContent>

                    <Columns>
                        <PropertyColumn Property="x => x.Id" Sortable="false" Filterable="false" IsEditable="false"/>
                        <PropertyColumn Property="x => x.Name" Title="Name"/>
                        <PropertyColumn Property="x => x.Department" Title="Department"/>
                        <PropertyColumn Property="x => x.Group" Title="Group"/>
                        <PropertyColumn Property="x => x.Description" Title="Description"/>

                        <TemplateColumn Hidden="false" CellClass="d-flex justify-end"
                                        Sortable="false" Filterable="false" StickyRight="true">
                            <CellTemplate>
                                <MudIconButton Icon="@Icons.Material.Outlined.Send" Size="@Size.Small" Color="Color.Primary" 
                                               OnClick="@(() => SendEmail(context.Item.Id))"> </MudIconButton>
                                <MudIconButton Icon="@Icons.Material.Outlined.Edit" Size="@Size.Small" OnClick="@(() => EditRow(context.Item.Id))"> </MudIconButton>
                                <MudSpacer/>
                                <MudIconButton Icon="@Icons.Material.Outlined.Delete" Size="Size.Small" Color="Color.Error" OnClick="@(() => DeleteRow(context.Item.Id))"> </MudIconButton>
                            </CellTemplate>
                        </TemplateColumn>
                    </Columns>

                    <PagerContent>                       
                             <MudDataGridPager T="FormDto" DisableRowsPerPage="true"/>                         
                    </PagerContent>

                </MudDataGrid>
            </div>

            <div class="div-right">
                    <MudDataGrid id="right"
                             T="FormRowBl"
                             Items="@FormRowBl"
                             FixedHeader="true"
                             EditMode="DataGridEditMode.Cell"
                             ReadOnly="@_readOnly"
                             RowsPerPage="10"
                             Filterable="false"
                             RowClick="@RowClicked"
                             SortMode="SortMode.None"
                             MultiSelection="false"
                             StartedEditingItem="@StartedEditingItem"
                             CanceledEditingItem="@CanceledEditingItem"
                             CommittedItemChanges="@CommittedItemChanges"
                             Bordered="true"
                             Dense="true"
                             EditTrigger="@(_editTriggerRowClick ? DataGridEditTrigger.OnRowClick : DataGridEditTrigger.Manual)"
                             ColumnResizeMode="ResizeMode.Column"
                             Style="height:100%">

                    <ToolBarContent>
                        <MudText Typo="Typo.h4" class="mr-2">Form rows</MudText>
                        <MudIconButton @onclick="AddItem" Icon="@Icons.Material.Filled.Add" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" />
                        <MudSpacer />
                        <MudSwitch T="bool" Checked="@_isEditMode" CheckedChanged="HandleEditMode" Color="Color.Primary">Edit Mode</MudSwitch>

                    </ToolBarContent>

                    <Columns>
                        <PropertyColumn Property="x => x.Query" />
                        <PropertyColumn Property="x => x.Required">
                            <EditTemplate>
                                <MudCheckBox @bind-Checked="context.Item.Required" @onclick="@(()=>EditFormRows(context.Item))" />
                            </EditTemplate>
                        </PropertyColumn>
                        <TemplateColumn Hidden="false" 
                                        Sortable="false" Filterable="false" StickyRight="true">
                            <CellTemplate>
                                <MudIconButton Icon="@Icons.Material.Outlined.Delete" Size="Size.Small" Color="Color.Error" 
                                                OnClick="@(() => DeleteFormRow(context.Item.Id))"> </MudIconButton>
                            </CellTemplate>

                        </TemplateColumn>                       
                    </Columns>


                    <PagerContent>                       
                             <MudDataGridPager T="FormRowBl" DisableRowsPerPage="true"/>                         
                    </PagerContent>

                   
                </MudDataGrid>
            </div>
        </MudMainContent>
    </MudLayout>
@* </div> *@

@code {
    private bool _isCellEditMode;
    private bool _editTriggerRowClick;
    public string _searchString;
    private bool _sortNameByLength;
    private List<string> _events = new();    
    
        bool _isEditMode = false;
        bool _readOnly = true;

        void HandleEditMode(bool isEditMode)
    {
        if(isEditMode)
        {
            _readOnly=false;
        }
        else
        {
            _readOnly=true;
        }
        _isEditMode = isEditMode;
    }
    
    async Task RowClicked(DataGridRowClickEventArgs<FormDto> args) => await GetFormRows(args.Item.Id);
    
    void StartedEditingItem(FormDto item)
    {
        System.Text.Json.JsonSerializer.Serialize(item);
    }
    
    void CanceledEditingItem(FormDto item)
    {
        System.Text.Json.JsonSerializer.Serialize(item);
    }
    
    void CommittedItemChanges(FormDto item)
    {
        System.Text.Json.JsonSerializer.Serialize(item);
    }
    
    
    
    void StartedEditingItem(FormRowBl item)
    {
        System.Text.Json.JsonSerializer.Serialize(item);
    }

    void CanceledEditingItem(FormRowBl item)
    {
        System.Text.Json.JsonSerializer.Serialize(item);
    }

    async Task CommittedItemChanges(FormRowBl item) => await EditFormRows(item);
    void AddItem() => FormRowBl?.Add(new FormRowBl());
    
    void RowClicked(DataGridRowClickEventArgs<FormRowBl> args)
    {
        System.Text.Json.JsonSerializer.Serialize(args.Item);
    }
}