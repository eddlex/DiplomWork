@using System.Data
@inherits LayoutComponentBase
<CascadingAuthenticationState>
<Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)"/>
        <FocusOnNavigate RouteData="@routeData" Selector="h1"/>
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>
</CascadingAuthenticationState>


<ErrorBoundary>

</ErrorBoundary>

@code {
    
    [Inject]
    private ISnackbar? Snackbar { get; set; }
    
    protected override void OnInitialized()
    {
        AppDomain.CurrentDomain.UnhandledException += CurrentDomain_UnhandledException;
    }

    private void CurrentDomain_UnhandledException(object sender, UnhandledExceptionEventArgs e) => Drow(((Exception)e.ExceptionObject).Message);
    
    
    public void Drow(string message)
    {
        if (Snackbar == null)
            return;
        
        Snackbar.Configuration.SnackbarVariant = Variant.Filled;   
        Snackbar.Configuration.MaxDisplayedSnackbars = 10;
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomEnd;
        Snackbar.Configuration.ShowCloseIcon = true;
        Snackbar.Add($"Error {message}", Severity.Error);
    }
}